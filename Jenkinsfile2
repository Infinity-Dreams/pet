pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }
  
   stages {
  
        stage('Build Docker Image') {
            when {
                branch 'master'
            }
            steps {
                echo 'Building Petclinic Docker Image'
                script {
                    app = docker.build("st251/petclinic-jenkins")
                }
            }
        }
        stage('Push Docker Image') {
            when {
                branch 'master'
            }
            steps {
                echo '=== Pushing Petclinic Docker Image ==='
                script {
                    GIT_COMMIT_HASH = sh (script: "git log -n 1 --pretty=format:'%H'", returnStdout: true)
                    SHORT_COMMIT = "${GIT_COMMIT_HASH[0..7]}"
                    docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-st251-jenkins') {
                        app.push("$SHORT_COMMIT")
                        app.push("latest")
                    }
                }
            }
        }
        stage('Remove local images') {
            steps {
                echo '=== Delete the local docker images ==='
                sh("docker rmi -f st251/petclinic-jenkins:latest || :")
                sh("docker rmi -f st251/petclinic-jenkins:$SHORT_COMMIT || :")
            }
        }
     
 
  }
   
} 
